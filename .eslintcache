[{"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\index.js":"1","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\Routes.js":"2","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\reportWebVitals.js":"3","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\App.js":"4","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\request\\index.js":"5","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\home\\TrendingCard.js":"6","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\home\\index.js":"7","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\common\\Message.js":"8","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\restaurants\\index.js":"9","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\restaurants\\RestaurantCard.js":"10"},{"size":503,"mtime":1612620337650,"results":"11","hashOfConfig":"12"},{"size":529,"mtime":1612705663402,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1612620337653,"results":"14","hashOfConfig":"12"},{"size":9984,"mtime":1612714825789,"results":"15","hashOfConfig":"12"},{"size":757,"mtime":1614009482474,"results":"16","hashOfConfig":"12"},{"size":3065,"mtime":1614184320903,"results":"17","hashOfConfig":"12"},{"size":1397,"mtime":1612713449750,"results":"18","hashOfConfig":"12"},{"size":903,"mtime":1612714662365,"results":"19","hashOfConfig":"12"},{"size":1233,"mtime":1614185604048,"results":"20","hashOfConfig":"12"},{"size":3106,"mtime":1614185689508,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"1frc5l7",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\index.js",["49"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Routes from './Routes'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Routes/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["50","51"],"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\Routes.js",["52","53"],"import React from 'react'\r\nimport {\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from 'react-router-dom'\r\nimport App from './App'\r\nimport Home from './components/home/'\r\n\r\nimport Restaurants from '.componen/restaurants/index'\r\n\r\nfunction Routes() {\r\n    return (\r\n       <BrowserRouter>\r\n       <Switch>\r\n        <Route path=\"/\" exact component={Home}></Route>\r\n        <Route path=\"/restaurants\" component={Restaurants}></Route>\r\n       </Switch>\r\n       </BrowserRouter>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Routes\r\n","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\reportWebVitals.js",[],"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\App.js",["54","55","56"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Geolocation from \"react-geolocation\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LocationSearchingIcon from \"@material-ui/icons/LocationSearching\";\r\nimport axios from \"axios\";\r\nimport Message from './components/common/Message'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  search: {\r\n    // position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n    textAlign: \"right\",\r\n    flexGrow: 3,\r\n    marginLeft: 120,\r\n    width: \"70%\",\r\n    // right:'0',\r\n    // border:\"1px solid red\",\r\n  },\r\n}));\r\n\r\n// Location search\r\n\r\n// end location search\r\n\r\nexport default function App({ data, children }) {\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [lat, setLat] = useState(null);\r\n  const [lng, setLng] = useState(null);\r\n  const [locDetail, setLocDetail] = useState(null);\r\n\r\n  useEffect(() => {\r\n    var item =localStorage.getItem(\"locationDetails\");\r\n    if (item) {\r\n        setLocDetail(JSON.parse(item));\r\n    }\r\n    console.log(item)\r\n    \r\n\r\n    if (lat && lng) {\r\n      \r\n      setLocation(lat, lng);\r\n    }\r\n  }, [lat, lng]);\r\n  \r\n  useEffect(() => {\r\n    data&&data(locDetail)\r\n    \r\n  }, [locDetail]);\r\n  const setLocation = (lat, lng) => {\r\n    // alert()\r\n\r\n    console.log(lat);\r\n    console.log(lng);\r\n    var url = `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lng}&localityLanguage=en`;\r\n\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        getLocationInfo(res.data.locality);\r\n      })\r\n      .catch((err) => {\r\n        console.table(err);\r\n      });\r\n    //     getLocationInfo(res.data.locality )\r\n  };\r\n\r\n  const getLocationInfo = (data) => {\r\n    var url = `https://developers.zomato.com/api/v2.1/cities?q=${data}&count=1`;\r\n\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"user-key\": \"0110bd60e6845c9aa66418529017dab6\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.location_suggestions[0]);\r\n        localStorage.setItem(\"locationDetails\", JSON.stringify(res.data.location_suggestions[0]));\r\n        \r\n        setLocDetail(res.data.location_suggestions[0]);\r\n      })\r\n      .catch((err) => {\r\n        console.table(err);\r\n      });\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  \r\n  const mainMenu = [\r\n    {\r\n      name: \"Home\",\r\n      id: 1,\r\n      routeLink: \"/\",\r\n    },\r\n    {\r\n      name: \"Restruants\",\r\n      id: 1,\r\n      routeLink: \"/restaurants\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n     \r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Mini Zomato\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <Avatar\r\n              pt={3}\r\n              alt=\"Remy Sharp\"\r\n              src={locDetail && locDetail.country_flag_url}\r\n              className={classes.large}\r\n            />\r\n            <h2 style={{ marginRight: \"20px\" }}>\r\n              {\" \"}\r\n         \r\n\r\n              {locDetail && locDetail.name}\r\n            </h2>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {mainMenu.map((menu, index) => (\r\n            <Link to={menu.routeLink}>\r\n              <ListItem button key={menu.id}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={menu.name} />\r\n              </ListItem>\r\n            </Link>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n\r\n        {locDetail ? (\r\n        [children]\r\n        ) : (\r\n          <Grid justify=\"center\" container >\r\n          <Paper component=\"form\" className={classes.root}>\r\n            <IconButton className={classes.iconButton} aria-label=\"menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              className={classes.input}\r\n              placeholder=\"Search Location\"\r\n              inputProps={{ \"aria-label\": \"search google maps\" }}\r\n            />\r\n            <IconButton\r\n              type=\"submit\"\r\n              className={classes.iconButton}\r\n              aria-label=\"search\"\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n\r\n            <Geolocation\r\n              lazy\r\n              render={({\r\n                fetchingPosition = false,\r\n                position: { coords: { latitude, longitude } = {} } = {},\r\n                error,\r\n                getCurrentPosition,\r\n              }) => (\r\n                <div>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      getCurrentPosition();\r\n                    }}\r\n                    className={classes.iconButton}\r\n                    aria-label=\"directions\"\r\n                  >\r\n                    <LocationSearchingIcon />\r\n                  </IconButton>\r\n                  <div>\r\n                    {error && <div>{error.message}</div>}\r\n                    {setLat(latitude)}\r\n                    {setLng(longitude)}\r\n                 \r\n                  </div>\r\n                </div>\r\n              )}\r\n            />\r\n          </Paper>\r\n          </Grid>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\request\\index.js",[],"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\home\\TrendingCard.js",["57","58","59","60","61"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function TrendingCard({\r\n  collection\r\n}) {\r\n  {console.log(collection)}\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root} style={{\r\n      'margin':\"10px\",\r\n      \"width\":\"33%\"\r\n    }}>\r\n      <CardHeader\r\n        avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n             {collection.title[0]}\r\n            </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={collection.title}\r\n        subheader={`No of Restruants : `+collection.res_count}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={collection.image_url}\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n        {collection.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions >\r\n      <Grid container justify=\"flex-start\">\r\n      <Button href=  {collection.url} variant=\"outlined\"  size=\"small\" color=\"primary\">\r\n      View Detail\r\n     </Button>\r\n      </Grid>\r\n     \r\n        \r\n        <Grid container justify=\"flex-end\">\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n      </Grid>\r\n       \r\n        \r\n      </CardActions>\r\n      \r\n      \r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\home\\index.js",["62"],"import Grid from '@material-ui/core/Grid';\r\nimport React,{useState,useEffect} from 'react'\r\nimport App from '../../App'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {trendingMeal} from '../../request/'\r\nimport Message from '../common/Message'\r\nimport TrendingCard from './TrendingCard'\r\n\r\n\r\n\r\n\r\nexport default function Home() {\r\n  const [location, setLocation] = useState(null)\r\n  const [collections, setCollections] = useState(null)\r\n  const  fetchTrending=async ()=>{\r\n\r\n    await trendingMeal(35).then((data)=>{\r\n      setCollections((data.data.collections))\r\n      console.log(data.data.collections);\r\n      \r\n    })\r\n     \r\n  }\r\n  useEffect(() => {\r\n    // alert()\r\n    return () => {\r\n     \r\n       fetchTrending()\r\n     \r\n    }\r\n  }, [location])\r\n\r\n\r\n  return (\r\n    \r\n    <App data={(locDetail)=>{\r\n     setLocation(locDetail)\r\n     \r\n      console.log(locDetail);\r\n     \r\n    }}>\r\n\r\n    <Grid item xs={12}  container\r\n    direction=\"row\"\r\n    wrap\r\n    justify=\"center\"\r\n   >\r\n  {(collections)&&(<Message open={true} data={`${collections.length} Trending Meals Found`}></Message>)}\r\n   {(collections)?(\r\n     \r\ncollections.map((collection)=>\r\n  (\r\n\r\n    <TrendingCard key={collection.collection.collection_id} collection={collection.collection}></TrendingCard>\r\n  )\r\n)\r\n  ):(\r\n   <h3>Loading Trending</h3>\r\n   )}\r\n  \r\n  \r\n   \r\n    </Grid>\r\n\r\n  \r\n    </App>\r\n  );\r\n}\r\n\r\n","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\common\\Message.js",["63"],"import React ,{useState,useEffect} from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\nfunction Message({\r\n    open,\r\n    data\r\n}) {\r\nconst [openstatus, setOpenstatus] = useState(true)\r\nuseEffect(() => {\r\n\r\n  return () => {\r\n\r\n    setOpenstatus(open)\r\n  }\r\n},[open])\r\nconst handleClose = ((event, reason) => {\r\n \r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n  if(!reason||reason==\"timeout\"){\r\n\r\n    setOpenstatus(false);\r\n  }\r\n  });\r\n    return (\r\n        <Snackbar open={openstatus}  anchorOrigin={{ vertical :'bottom', horizontal:'right' }} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n      {data}\r\n        </Alert>\r\n      </Snackbar>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\restaurants\\index.js",["64"],"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\restaurants\\RestaurantCard.js",["65","66","67","68","69","70"],{"ruleId":"71","severity":1,"message":"72","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":11},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"71","severity":1,"message":"79","line":6,"column":5,"nodeType":"73","messageId":"74","endLine":6,"endColumn":9},{"ruleId":"71","severity":1,"message":"72","line":8,"column":8,"nodeType":"73","messageId":"74","endLine":8,"endColumn":11},{"ruleId":"71","severity":1,"message":"80","line":27,"column":8,"nodeType":"73","messageId":"74","endLine":27,"endColumn":15},{"ruleId":"81","severity":1,"message":"82","line":132,"column":6,"nodeType":"83","endLine":132,"endColumn":16,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":137,"column":6,"nodeType":"83","endLine":137,"endColumn":17,"suggestions":"86"},{"ruleId":"71","severity":1,"message":"87","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":12},{"ruleId":"71","severity":1,"message":"88","line":11,"column":8,"nodeType":"73","messageId":"74","endLine":11,"endColumn":16},{"ruleId":"71","severity":1,"message":"89","line":20,"column":8,"nodeType":"73","messageId":"74","endLine":20,"endColumn":22},{"ruleId":"90","severity":1,"message":"91","line":49,"column":3,"nodeType":"92","messageId":"93","endLine":49,"endColumn":28},{"ruleId":"71","severity":1,"message":"94","line":53,"column":9,"nodeType":"73","messageId":"74","endLine":53,"endColumn":26},{"ruleId":"71","severity":1,"message":"95","line":4,"column":10,"nodeType":"73","messageId":"74","endLine":4,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":24,"column":21,"nodeType":"98","messageId":"99","endLine":24,"endColumn":23},{"ruleId":"81","severity":1,"message":"100","line":27,"column":10,"nodeType":"83","endLine":27,"endColumn":20,"suggestions":"101"},{"ruleId":"71","severity":1,"message":"87","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":12},{"ruleId":"71","severity":1,"message":"88","line":11,"column":8,"nodeType":"73","messageId":"74","endLine":11,"endColumn":16},{"ruleId":"71","severity":1,"message":"89","line":20,"column":8,"nodeType":"73","messageId":"74","endLine":20,"endColumn":22},{"ruleId":"90","severity":1,"message":"91","line":49,"column":3,"nodeType":"92","messageId":"93","endLine":49,"endColumn":30},{"ruleId":"90","severity":1,"message":"91","line":50,"column":3,"nodeType":"92","messageId":"93","endLine":50,"endColumn":28},{"ruleId":"71","severity":1,"message":"94","line":54,"column":9,"nodeType":"73","messageId":"74","endLine":54,"endColumn":26},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"'Link' is defined but never used.","'Message' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLocation'. Either include it or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. If 'data' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["105"],"'clsx' is defined but never used.","'Collapse' is defined but never used.","'ExpandMoreIcon' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'handleExpandClick' is assigned a value but never used.","'makeStyles' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchRestaurant'. Either include it or remove the dependency array.",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [lat, lng, setLocation]",{"range":"113","text":"114"},"Update the dependencies array to be: [data, locDetail]",{"range":"115","text":"116"},"Update the dependencies array to be: [fetchRestaurant, location]",{"range":"117","text":"118"},[4028,4038],"[lat, lng, setLocation]",[4105,4116],"[data, locDetail]",[738,748],"[fetchRestaurant, location]"]