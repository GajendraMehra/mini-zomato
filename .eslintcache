[{"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\index.js":"1","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\Routes.js":"2","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\reportWebVitals.js":"3","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\App.js":"4","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\Home.js":"5","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\request\\index.js":"6","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\home\\TrendingCard.js":"7"},{"size":503,"mtime":1612620337650,"results":"8","hashOfConfig":"9"},{"size":453,"mtime":1612620337642,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1612620337653,"results":"11","hashOfConfig":"9"},{"size":9619,"mtime":1612620337639,"results":"12","hashOfConfig":"9"},{"size":1239,"mtime":1612676328086,"results":"13","hashOfConfig":"9"},{"size":384,"mtime":1612673554003,"results":"14","hashOfConfig":"9"},{"size":4567,"mtime":1612675133892,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1frc5l7",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"19"},"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\index.js",["35"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Routes from './Routes'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Routes/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["36","37"],"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\Routes.js",["38"],"import React from 'react'\r\nimport {\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from 'react-router-dom'\r\nimport App from './App'\r\nimport Home from './components/Home'\r\n\r\nfunction Routes() {\r\n    return (\r\n       <BrowserRouter>\r\n       <Switch>\r\n        <Route path=\"/\" exact component={App}></Route>\r\n        <Route path=\"/home\" component={Home}></Route>\r\n       </Switch>\r\n       </BrowserRouter>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Routes\r\n","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\reportWebVitals.js",[],"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\App.js",["39","40"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Geolocation from \"react-geolocation\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LocationSearchingIcon from \"@material-ui/icons/LocationSearching\";\r\nimport axios from \"axios\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  search: {\r\n    // position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n    textAlign: \"right\",\r\n    flexGrow: 3,\r\n    marginLeft: 120,\r\n    width: \"70%\",\r\n    // right:'0',\r\n    // border:\"1px solid red\",\r\n  },\r\n}));\r\n\r\n// Location search\r\n\r\n// end location search\r\n\r\nexport default function App({ data, children }) {\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [lat, setLat] = useState(null);\r\n  const [lng, setLng] = useState(null);\r\n  const [locDetail, setLocDetail] = useState(null);\r\n\r\n  useEffect(() => {\r\n    \r\n\r\n    if (lat && lng) {\r\n      \r\n      setLocation(lat, lng);\r\n    }\r\n  }, [lat, lng]);\r\n  \r\n  useEffect(() => {\r\n    \r\n\r\n    if (lat && lng) {\r\n      \r\n      (data)&&data(locDetail)\r\n    }\r\n  }, [locDetail]);\r\n  const setLocation = (lat, lng) => {\r\n    // alert()\r\n\r\n    console.log(lat);\r\n    console.log(lng);\r\n    var url = `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lng}&localityLanguage=en`;\r\n\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        getLocationInfo(res.data.locality);\r\n      })\r\n      .catch((err) => {\r\n        console.table(err);\r\n      });\r\n    //     getLocationInfo(res.data.locality )\r\n  };\r\n\r\n  const getLocationInfo = (data) => {\r\n    var url = `https://developers.zomato.com/api/v2.1/cities?q=${data}&count=1`;\r\n\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"user-key\": \"0110bd60e6845c9aa66418529017dab6\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.location_suggestions[0]);\r\n\r\n        setLocDetail(res.data.location_suggestions[0]);\r\n      })\r\n      .catch((err) => {\r\n        console.table(err);\r\n      });\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const mainMenu = [\r\n    {\r\n      name: \"Restruants\",\r\n      id: 1,\r\n      routeLink: \"/home\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Mini Zomato\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <Avatar\r\n              pt={3}\r\n              alt=\"Remy Sharp\"\r\n              src={locDetail && locDetail.country_flag_url}\r\n              className={classes.large}\r\n            />\r\n            <h2 style={{ marginRight: \"20px\" }}>\r\n              {\" \"}\r\n              {locDetail && locDetail.name}\r\n            </h2>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {mainMenu.map((menu, index) => (\r\n            <Link to={menu.routeLink}>\r\n              <ListItem button key={menu.id}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={menu.name} />\r\n              </ListItem>\r\n            </Link>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n\r\n        {locDetail ? (\r\n        [children]\r\n        ) : (\r\n          <Grid justify=\"center\" container >\r\n          <Paper component=\"form\" className={classes.root}>\r\n            <IconButton className={classes.iconButton} aria-label=\"menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              className={classes.input}\r\n              placeholder=\"Search Location\"\r\n              inputProps={{ \"aria-label\": \"search google maps\" }}\r\n            />\r\n            <IconButton\r\n              type=\"submit\"\r\n              className={classes.iconButton}\r\n              aria-label=\"search\"\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n\r\n            <Geolocation\r\n              lazy\r\n              render={({\r\n                fetchingPosition = false,\r\n                position: { coords: { latitude, longitude } = {} } = {},\r\n                error,\r\n                getCurrentPosition,\r\n              }) => (\r\n                <div>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      getCurrentPosition();\r\n                    }}\r\n                    className={classes.iconButton}\r\n                    aria-label=\"directions\"\r\n                  >\r\n                    <LocationSearchingIcon />\r\n                  </IconButton>\r\n                  <div>\r\n                    {error && <div>{error.message}</div>}\r\n                    {setLat(latitude)}\r\n                    {setLng(longitude)}\r\n                 \r\n                  </div>\r\n                </div>\r\n              )}\r\n            />\r\n          </Paper>\r\n          </Grid>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\Home.js",["41"],"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\request\\index.js",[],"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\home\\TrendingCard.js",["42"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function TrendingCard({\r\n  collection\r\n}) {\r\n  {console.log(collection)}\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root} style={{\r\n      'margin':\"10px\"\r\n    }}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            R\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={collection.title}\r\n        subheader=\"September 14, 2016\"\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={collection.image_url}\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n        {collection.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Method:</Typography>\r\n          <Typography paragraph>\r\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\r\n            minutes.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\r\n            heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\r\n            browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\r\n            and chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes, onion, salt and\r\n            pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\r\n            saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\r\n            without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to\r\n            medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook\r\n            again without stirring, until mussels have opened and rice is just tender, 5 to 7\r\n            minutes more. (Discard any mussels that don’t open.)\r\n          </Typography>\r\n          <Typography>\r\n            Set aside off of the heat to let rest for 10 minutes, and then serve.\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n",{"ruleId":"43","severity":1,"message":"44","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":11},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"43","severity":1,"message":"51","line":6,"column":5,"nodeType":"45","messageId":"46","endLine":6,"endColumn":9},{"ruleId":"52","severity":1,"message":"53","line":126,"column":6,"nodeType":"54","endLine":126,"endColumn":16,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"56","line":135,"column":6,"nodeType":"54","endLine":135,"endColumn":17,"suggestions":"57"},{"ruleId":"43","severity":1,"message":"58","line":4,"column":10,"nodeType":"45","messageId":"46","endLine":4,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":45,"column":3,"nodeType":"61","messageId":"62","endLine":45,"endColumn":28},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLocation'. Either include it or remove the dependency array.","ArrayExpression",["65"],"React Hook useEffect has missing dependencies: 'data', 'lat', and 'lng'. Either include them or remove the dependency array. If 'data' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["66"],"'makeStyles' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [lat, lng, setLocation]",{"range":"71","text":"72"},"Update the dependencies array to be: [data, lat, lng, locDetail]",{"range":"73","text":"74"},[3833,3843],"[lat, lng, setLocation]",[3954,3965],"[data, lat, lng, locDetail]"]