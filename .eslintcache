[{"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\index.js":"1","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\Routes.js":"2","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\reportWebVitals.js":"3","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\App.js":"4","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\Home.js":"5","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\request\\index.js":"6","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\home\\TrendingCard.js":"7"},{"size":503,"mtime":1612620337650,"results":"8","hashOfConfig":"9"},{"size":453,"mtime":1612620337642,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1612620337653,"results":"11","hashOfConfig":"9"},{"size":9619,"mtime":1612620337639,"results":"12","hashOfConfig":"9"},{"size":1197,"mtime":1612674883541,"results":"13","hashOfConfig":"9"},{"size":384,"mtime":1612673554003,"results":"14","hashOfConfig":"9"},{"size":4714,"mtime":1612674947671,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1frc5l7",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\index.js",["34"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Routes from './Routes'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Routes/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["35","36"],"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\Routes.js",["37"],"import React from 'react'\r\nimport {\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from 'react-router-dom'\r\nimport App from './App'\r\nimport Home from './components/Home'\r\n\r\nfunction Routes() {\r\n    return (\r\n       <BrowserRouter>\r\n       <Switch>\r\n        <Route path=\"/\" exact component={App}></Route>\r\n        <Route path=\"/home\" component={Home}></Route>\r\n       </Switch>\r\n       </BrowserRouter>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Routes\r\n","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\reportWebVitals.js",[],"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\App.js",["38","39"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Geolocation from \"react-geolocation\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LocationSearchingIcon from \"@material-ui/icons/LocationSearching\";\r\nimport axios from \"axios\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  search: {\r\n    // position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n    textAlign: \"right\",\r\n    flexGrow: 3,\r\n    marginLeft: 120,\r\n    width: \"70%\",\r\n    // right:'0',\r\n    // border:\"1px solid red\",\r\n  },\r\n}));\r\n\r\n// Location search\r\n\r\n// end location search\r\n\r\nexport default function App({ data, children }) {\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [lat, setLat] = useState(null);\r\n  const [lng, setLng] = useState(null);\r\n  const [locDetail, setLocDetail] = useState(null);\r\n\r\n  useEffect(() => {\r\n    \r\n\r\n    if (lat && lng) {\r\n      \r\n      setLocation(lat, lng);\r\n    }\r\n  }, [lat, lng]);\r\n  \r\n  useEffect(() => {\r\n    \r\n\r\n    if (lat && lng) {\r\n      \r\n      (data)&&data(locDetail)\r\n    }\r\n  }, [locDetail]);\r\n  const setLocation = (lat, lng) => {\r\n    // alert()\r\n\r\n    console.log(lat);\r\n    console.log(lng);\r\n    var url = `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lng}&localityLanguage=en`;\r\n\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        getLocationInfo(res.data.locality);\r\n      })\r\n      .catch((err) => {\r\n        console.table(err);\r\n      });\r\n    //     getLocationInfo(res.data.locality )\r\n  };\r\n\r\n  const getLocationInfo = (data) => {\r\n    var url = `https://developers.zomato.com/api/v2.1/cities?q=${data}&count=1`;\r\n\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"user-key\": \"0110bd60e6845c9aa66418529017dab6\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.location_suggestions[0]);\r\n\r\n        setLocDetail(res.data.location_suggestions[0]);\r\n      })\r\n      .catch((err) => {\r\n        console.table(err);\r\n      });\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const mainMenu = [\r\n    {\r\n      name: \"Restruants\",\r\n      id: 1,\r\n      routeLink: \"/home\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Mini Zomato\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <Avatar\r\n              pt={3}\r\n              alt=\"Remy Sharp\"\r\n              src={locDetail && locDetail.country_flag_url}\r\n              className={classes.large}\r\n            />\r\n            <h2 style={{ marginRight: \"20px\" }}>\r\n              {\" \"}\r\n              {locDetail && locDetail.name}\r\n            </h2>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {mainMenu.map((menu, index) => (\r\n            <Link to={menu.routeLink}>\r\n              <ListItem button key={menu.id}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={menu.name} />\r\n              </ListItem>\r\n            </Link>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n\r\n        {locDetail ? (\r\n        [children]\r\n        ) : (\r\n          <Grid justify=\"center\" container >\r\n          <Paper component=\"form\" className={classes.root}>\r\n            <IconButton className={classes.iconButton} aria-label=\"menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              className={classes.input}\r\n              placeholder=\"Search Location\"\r\n              inputProps={{ \"aria-label\": \"search google maps\" }}\r\n            />\r\n            <IconButton\r\n              type=\"submit\"\r\n              className={classes.iconButton}\r\n              aria-label=\"search\"\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n\r\n            <Geolocation\r\n              lazy\r\n              render={({\r\n                fetchingPosition = false,\r\n                position: { coords: { latitude, longitude } = {} } = {},\r\n                error,\r\n                getCurrentPosition,\r\n              }) => (\r\n                <div>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      getCurrentPosition();\r\n                    }}\r\n                    className={classes.iconButton}\r\n                    aria-label=\"directions\"\r\n                  >\r\n                    <LocationSearchingIcon />\r\n                  </IconButton>\r\n                  <div>\r\n                    {error && <div>{error.message}</div>}\r\n                    {setLat(latitude)}\r\n                    {setLng(longitude)}\r\n                 \r\n                  </div>\r\n                </div>\r\n              )}\r\n            />\r\n          </Paper>\r\n          </Grid>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\Home.js",["40"],"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\request\\index.js",[],"C:\\Users\\Gajendra\\Documents\\Github\\mini-zomato\\src\\components\\home\\TrendingCard.js",["41"],{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":11},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"42","severity":1,"message":"50","line":6,"column":5,"nodeType":"44","messageId":"45","endLine":6,"endColumn":9},{"ruleId":"51","severity":1,"message":"52","line":126,"column":6,"nodeType":"53","endLine":126,"endColumn":16,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"55","line":135,"column":6,"nodeType":"53","endLine":135,"endColumn":17,"suggestions":"56"},{"ruleId":"42","severity":1,"message":"57","line":4,"column":10,"nodeType":"44","messageId":"45","endLine":4,"endColumn":20},{"ruleId":"58","severity":1,"message":"59","line":45,"column":3,"nodeType":"60","messageId":"61","endLine":45,"endColumn":28},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLocation'. Either include it or remove the dependency array.","ArrayExpression",["64"],"React Hook useEffect has missing dependencies: 'data', 'lat', and 'lng'. Either include them or remove the dependency array. If 'data' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["65"],"'makeStyles' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [lat, lng, setLocation]",{"range":"70","text":"71"},"Update the dependencies array to be: [data, lat, lng, locDetail]",{"range":"72","text":"73"},[3833,3843],"[lat, lng, setLocation]",[3954,3965],"[data, lat, lng, locDetail]"]